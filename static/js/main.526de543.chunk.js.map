{"version":3,"sources":["components/Section.js","components/FeedbackOptions.js","components/Statistics.js","components/Notification.js","App.js","index.js"],"names":["Section","this","props","title","children","Component","FeedbackOptions","onLeaveFeedback","options","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","stateKeysArray","Object","keys","handleStateChange","event","setState","prevState","stateKey","target","textContent","toLowerCase","capitalizeFirstLetter","string","charAt","toUpperCase","slice","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","map","key","uniqId","shortid","generate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAeeA,E,4JAZb,WAAU,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,qCACE,6BAAKD,IACL,mCAAGC,W,GAPWC,aCQPC,E,4JAPb,WAAU,IAAD,EAC8BL,KAAKC,MAAlCK,EADD,EACCA,gBAAiBC,EADlB,EACkBA,QAEzB,OAAO,wBAAQC,QAASF,EAAjB,SAAmCC,Q,GAJhBH,aCgBfK,E,4JAfb,WAAU,IAAD,EACmDT,KAAKC,MAAvDS,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,mBAEnC,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,c,GAViBV,aCQVW,E,4JAPb,WAAU,IACAC,EAAYhB,KAAKC,MAAjBe,QAER,OAAO,6BAAKA,Q,GAJWZ,aC2EZa,E,4MArEbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,eAAiBC,OAAOC,KAAK,EAAKH,O,EAElCI,kBAAoB,SAACC,GACnB,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAWH,EAAMI,OAAOC,YAAYC,cAE1C,OAAO,eAAGH,EAAWD,EAAUC,GAAY,O,EAI/CI,sBAAwB,SAACC,GACvB,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,I,EAGvDC,mBAAqB,WAAO,IAAD,EACM,EAAKjB,MAEpC,OAHyB,EACjBR,KADiB,EACXC,QADW,EACFC,K,EAKzBwB,gCAAkC,WAAO,IAC/B1B,EAAS,EAAKQ,MAAdR,KAER,OAAO2B,KAAKC,MAAO5B,EAAO,EAAKyB,qBAAwB,M,4CAGzD,WAAU,IAAD,SACwBnC,KAAKkB,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACGF,KAAKmB,eAAeoB,KAAI,SAACC,GACxB,IAAMC,EAASC,IAAQC,WAEvB,OACE,cAAC,EAAD,CAEEpC,QAAS,EAAKuB,sBAAsBU,GACpClC,gBAAiB,EAAKgB,mBAFjBmB,QAQZ/B,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,cAAC,EAAD,CAASV,MAAM,aAAf,SACE,cAAC,EAAD,CACEQ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOb,KAAKmC,qBACZrB,mBAAoBd,KAAKoC,sCAI7B,cAAC,EAAD,CAAcpB,QAAQ,6B,GA/DdZ,aCHlBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.526de543.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Section extends Component {\n  render() {\n    const { title, children } = this.props;\n\n    return (\n      <>\n        <h2>{title}</h2>\n        <>{children}</>\n      </>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component } from \"react\";\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { onLeaveFeedback, options } = this.props;\n\n    return <button onClick={onLeaveFeedback}>{options}</button>;\n  }\n}\n\nexport default FeedbackOptions;\n","import React, { Component } from \"react\";\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n\n    return (\n      <>\n        <p>Good: {good}</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad}</p>\n        <p>Total: {total}</p>\n        <p>Positive feedback: {positivePercentage}%</p>\n      </>\n    );\n  }\n}\n\nexport default Statistics;\n","import React, { Component } from \"react\";\n\nclass Notification extends Component {\n  render() {\n    const { message } = this.props;\n\n    return <h2>{message}</h2>;\n  }\n}\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  stateKeysArray = Object.keys(this.state);\n\n  handleStateChange = (event) => {\n    this.setState((prevState) => {\n      const stateKey = event.target.textContent.toLowerCase();\n\n      return { [stateKey]: prevState[stateKey] + 1 };\n    });\n  };\n\n  capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n\n    return Math.floor((good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          {this.stateKeysArray.map((key) => {\n            const uniqId = shortid.generate();\n\n            return (\n              <FeedbackOptions\n                key={uniqId}\n                options={this.capitalizeFirstLetter(key)}\n                onLeaveFeedback={this.handleStateChange}\n              />\n            );\n          })}\n        </Section>\n\n        {good > 0 || neutral > 0 || bad > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}