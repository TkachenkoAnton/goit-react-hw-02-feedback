{"version":3,"sources":["components/FeedbackOptions/feedbackOptions.module.scss","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics.js","components/Notification.js","App.js","index.js","components/Section/section.module.scss"],"names":["module","exports","Section","this","props","title","children","className","styles","container","main__title","feedbackButtons__container","Component","FeedbackOptions","onLeaveFeedback","options","feedback__buttons","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","stateKeysArray","Object","keys","handleStateChange","event","setState","prevState","stateKey","target","textContent","toLowerCase","capitalizeFirstLetter","string","charAt","toUpperCase","slice","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","map","key","uniqId","shortid","generate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,kBAAoB,6C,4KCoBvBC,E,4JAhBb,WAAU,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,0BAASC,UAAWC,IAAOC,UAA3B,UACE,oBAAIF,UAAWC,IAAOE,YAAtB,SAAoCL,IACpC,qBAAKE,UAAWC,IAAOG,2BAAvB,SAAoDL,W,GAPtCM,a,iBCiBPC,E,4JAhBb,WAAU,IAAD,EAC8BV,KAAKC,MAAlCU,EADD,EACCA,gBAAiBC,EADlB,EACkBA,QAEzB,OACE,wBAAQR,UAAWC,IAAOQ,kBAAmBC,QAASH,EAAtD,SACGC,Q,GANqBH,aCuBfM,E,4JAvBb,WAAU,IAAD,EACmDf,KAAKC,MAAvDe,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,mBAEnC,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,c,GAViBX,aCaVY,E,4JAXb,WAAU,IACAC,EAAYtB,KAAKC,MAAjBqB,QAER,OAAO,oBAAIlB,UAAWC,IAAOC,UAAtB,SAAkCgB,Q,GAJlBb,aC2EZc,G,kNArEbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,eAAiBC,OAAOC,KAAK,EAAKH,O,EAElCI,kBAAoB,SAACC,GACnB,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAWH,EAAMI,OAAOC,YAAYC,cAE1C,OAAO,eAAGH,EAAWD,EAAUC,GAAY,O,EAI/CI,sBAAwB,SAACC,GACvB,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,I,EAGvDC,mBAAqB,WAAO,IAAD,EACM,EAAKjB,MAEpC,OAHyB,EACjBR,KADiB,EACXC,QADW,EACFC,K,EAKzBwB,gCAAkC,WAAO,IAC/B1B,EAAS,EAAKQ,MAAdR,KAER,OAAO2B,KAAKC,MAAO5B,EAAO,EAAKyB,qBAAwB,M,4CAGzD,WAAU,IAAD,SACwBzC,KAAKwB,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACGF,KAAKyB,eAAeoB,KAAI,SAACC,GACxB,IAAMC,EAASC,IAAQC,WAEvB,OACE,cAAC,EAAD,CAEErC,QAAS,EAAKwB,sBAAsBU,GACpCnC,gBAAiB,EAAKiB,mBAFjBmB,QAQZ/B,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,cAAC,EAAD,CAAShB,MAAM,aAAf,SACE,cAAC,EAAD,CACEc,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOnB,KAAKyC,qBACZrB,mBAAoBpB,KAAK0C,sCAI7B,cAAC,EAAD,CAAcpB,QAAQ,6B,GA/Ddb,cCLlByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BzD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,YAAc,6BAA6B,2BAA6B,+C","file":"static/js/main.360965f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__buttons\":\"feedbackOptions_feedback__buttons__3TGco\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./section.module.scss\";\n\nclass Section extends Component {\n  render() {\n    const { title, children } = this.props;\n\n    return (\n      <section className={styles.container}>\n        <h2 className={styles.main__title}>{title}</h2>\n        <div className={styles.feedbackButtons__container}>{children}</div>\n      </section>\n    );\n  }\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./feedbackOptions.module.scss\";\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { onLeaveFeedback, options } = this.props;\n\n    return (\n      <button className={styles.feedback__buttons} onClick={onLeaveFeedback}>\n        {options}\n      </button>\n    );\n  }\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.string.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n\n    return (\n      <div>\n        <p>Good: {good}</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad}</p>\n        <p>Total: {total}</p>\n        <p>Positive feedback: {positivePercentage}%</p>\n      </div>\n    );\n  }\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Section/section.module.scss\";\n\nclass Notification extends Component {\n  render() {\n    const { message } = this.props;\n\n    return <h2 className={styles.container}>{message}</h2>;\n  }\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\n// eslint-disable-next-line\nimport baseStyles from \"./base-styles/main-base-styles.scss\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  stateKeysArray = Object.keys(this.state);\n\n  handleStateChange = (event) => {\n    this.setState((prevState) => {\n      const stateKey = event.target.textContent.toLowerCase();\n\n      return { [stateKey]: prevState[stateKey] + 1 };\n    });\n  };\n\n  capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n\n    return Math.floor((good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          {this.stateKeysArray.map((key) => {\n            const uniqId = shortid.generate();\n\n            return (\n              <FeedbackOptions\n                key={uniqId}\n                options={this.capitalizeFirstLetter(key)}\n                onLeaveFeedback={this.handleStateChange}\n              />\n            );\n          })}\n        </Section>\n\n        {good > 0 || neutral > 0 || bad > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"section_container__1T5nC\",\"main__title\":\"section_main__title__2xmWo\",\"feedbackButtons__container\":\"section_feedbackButtons__container__zNytc\"};"],"sourceRoot":""}